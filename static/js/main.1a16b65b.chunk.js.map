{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","src","alt","onClick","cardImages","matched","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","id","floor","useEffect","resetTurn","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAuBeA,MAtBf,YAAgE,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAQ/C,OACI,qBAAKC,UAAU,OAAf,SACI,sBAAKA,UAAWF,EAAU,UAAY,GAAtC,UACI,qBAAKG,IAAKL,EAAKK,IAAKD,UAAU,QAAQE,IAAI,eAC1C,qBACID,IAAI,iCACJD,UAAU,OACVE,IAAI,YACJC,QAdI,WACXJ,GACDF,EAAaD,YCDnBQ,EAAa,CACjB,CAAE,IAAO,kCAAmCC,SAAS,GACrD,CAAE,IAAO,kCAAmCA,SAAS,GACrD,CAAE,IAAO,gCAAiCA,SAAS,GACnD,CAAE,IAAO,kCAAmCA,SAAS,GACrD,CAAE,IAAO,kCAAmCA,SAAS,GACrD,CAAE,IAAO,iCAAkCA,SAAS,IAgFvCC,MA7Ef,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,MAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAgCR,oBAAS,GAAzC,mBAAOR,EAAP,KAAiBiB,EAAjB,KAGMC,EAAe,WACnBJ,EAAa,MACbE,EAAa,MACb,IAAMG,EAAgB,UAAId,EAAeA,GACtCe,MAAK,kBAAMC,KAAKC,SAAW,MAC3BC,KAAI,SAAC1B,GAAD,mBAAC,eAAeA,GAAhB,IAAsB2B,GAAIH,KAAKI,MAAMJ,KAAKC,eAEjDZ,EAASS,GACTP,EAAS,IAILd,EAAe,SAACD,GACpBgB,EAAYG,EAAanB,GAAQiB,EAAajB,IAIhD6B,qBAAU,WACJb,GAAaE,IACfE,GAAY,GACRJ,EAAUX,MAAQa,EAAUb,KAC9BQ,EAASD,EACNc,KAAI,SAAC1B,GAAD,OACFA,EAAKK,MAAQW,EAAUX,KAAOL,EAAKK,MAAQa,EAAUb,IAAtD,YAAC,eACML,GADP,IACaS,SAAS,IAAST,MACnC8B,KAGAC,YAAW,WACTD,MACC,QAGN,CAACd,EAAWE,IAEfW,qBAAU,WACRR,MACC,IAIH,IAAMS,EAAY,WAChBb,EAAa,MACbE,EAAa,MACbJ,EAASD,EAAQ,GACjBM,GAAY,IAGd,OACE,sBAAKhB,UAAU,MAAf,UACE,6CACA,wBAAQG,QAASc,EAAjB,sBACA,qBAAKjB,UAAU,YAAf,SACGQ,EAAMc,KAAI,SAAA1B,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,EACNC,aAAcA,EACdC,QAASF,IAASgB,GAAahB,IAASkB,GAAalB,EAAKS,QAC1DN,SAAUA,GAJLH,EAAK2B,SAQhB,wCAAWb,SChFjBkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1a16b65b.chunk.js","sourcesContent":["import './SingleCard.css'\nfunction SingleCard({ card, handleChoice, flipped, disabled }) {\n\n    const handleClick = () => {\n        if (!disabled) {\n            handleChoice(card)\n        }\n    }\n\n    return (\n        <div className=\"card\">\n            <div className={flipped ? \"flipped\" : \"\"}>\n                <img src={card.src} className=\"front\" alt=\"card front\" />\n                <img\n                    src=\"./memory-magic/img/cover4.jpeg\"\n                    className=\"back\"\n                    alt=\"card back\"\n                    onClick={handleClick} />\n            </div>\n        </div>\n    )\n}\n\nexport default SingleCard","import { useState, useEffect } from 'react';\nimport './App.css'\nimport SingleCard from './components/SingleCard';\n\nconst cardImages = [\n  { \"src\": \"./memory-magic/img/helmet-1.png\", matched: false },\n  { \"src\": \"./memory-magic/img/potion-1.png\", matched: false },\n  { \"src\": \"./memory-magic/img/ring-1.png\", matched: false },\n  { \"src\": \"./memory-magic/img/scroll-1.png\", matched: false },\n  { \"src\": \"./memory-magic/img/shield-1.png\", matched: false },\n  { \"src\": \"./memory-magic/img/sword-1.png\", matched: false }\n]\n\nfunction App() {\n\n  const [cards, setCards] = useState([])\n  const [turns, setTurns] = useState(0)\n  const [choiceOne, setChoiceOne] = useState(null)\n  const [choiceTwo, setChoiceTwo] = useState(null)\n  const [disabled, setDisabled] = useState(false)\n\n  //shuffle cards\n  const shuffleCards = () => {\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    const shuffledCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map((card) => ({ ...card, id: Math.floor(Math.random()) }))\n\n    setCards(shuffledCards)\n    setTurns(0)\n  }\n\n  //handle a choice\n  const handleChoice = (card) => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\n  }\n\n  //compare two cards\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true)\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(cards\n          .map((card) =>\n            (card.src === choiceOne.src || card.src === choiceTwo.src) ?\n              { ...card, matched: true } : card))\n        resetTurn()\n      }\n      else {\n        setTimeout(() => {\n          resetTurn()\n        }, 500);\n      }\n    }\n  }, [choiceOne, choiceTwo])\n\n  useEffect(() => {\n    shuffleCards()\n  }, [])\n\n\n  //reset choices and increase turn\n  const resetTurn = () => {\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setTurns(turns + 1)\n    setDisabled(false)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCards}>New Game</button>\n      <div className=\"card-grid\">\n        {cards.map(card => (\n          <SingleCard\n            key={card.id}\n            card={card}\n            handleChoice={handleChoice}\n            flipped={card === choiceOne || card === choiceTwo || card.matched}\n            disabled={disabled}\n          />\n        ))}\n      </div>\n      <p>Turns: {turns}</p>\n    </div>\n  );\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}